name: Internal - Common Continuous Integration tasks

on:
  workflow_call:
    inputs:
      tag:
        description: "Tag Version (semver - x.x.x)"
        type: string
        required: false
    outputs:
      built-images:
        value: ${{ jobs.docker-build-images.outputs.built-images }}

jobs:
  init:
    name: "prepare environment for jobs"
    runs-on: self-hosted
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

  shellcheck:
    name: "Shell: Lint Shell Scripts"
    runs-on: self-hosted
    needs:
      - init
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Lint Shell Scripts
        run: |
          shellcheck --shell=bash entrypoint.sh

  hadolint:
    name: "Docker: Lint Dockerfile"
    runs-on: self-hosted
    needs:
      - init
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Lint Dockerfile
        run: |
          docker run --rm -i hadolint/hadolint < Dockerfile

  docker-build-images:
    name: "Docker: Build Images"
    needs:
      - init
      - shellcheck
      - hadolint
    uses: hoverkraft-tech/ci-github-container/.github/workflows/docker-build-images.yml@0.18.0
    permissions:
      actions: write
      contents: read
      id-token: write
      issues: read
      packages: write
      pull-requests: read
    secrets:
      oci-registry-password: ${{ secrets.GITHUB_TOKEN }}
    with:
      runs-on: '["self-hosted"]'
      oci-registry: ghcr.io
      oci-registry-username: ${{ github.actor }}
      images: |
        [{
          "name": "app",
          "repository": "${{ github.repository }}",
          "tag": "${{ inputs.tag }}",
          "dockerfile": "./Dockerfile",
          "platforms": [
            "linux/amd64",
            "linux/arm64"
          ]
        }]

  chart-testing:
    name: "Helm: Chart Testing"
    runs-on: self-hosted
    needs:
      - init
      - docker-build-images
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install tools with asdf
        uses: asdf-vm/actions/install@v3
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.6.1
      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }})
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi
      - name: Run chart-testing (lint)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct lint --target-branch ${{ github.event.repository.default_branch }}
      - name: Create kind cluster
        if: steps.list-changed.outputs.changed == 'true'
        uses: helm/kind-action@v1.9.0
      - name: Run chart-testing (install)
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          ct install \
            --target-branch ${{ github.event.repository.default_branch }} \
            --helm-extra-args "--set image.tag=${{ needs.docker-build-images.outputs.built-images[0].tag }} --wait"
      - name: show pods
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          sleep 10
          kubectl get cronjob -n default
          kubectl create job --from=cronjob/ovh-snapshoter -n default ovh-snapshoter-job
          sleep 10
          kubectl get pods -n default
